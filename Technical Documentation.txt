# M-Haderech Code Structure and Key Components

This document provides an overview of the code structure, key components, and third-party services used in the **M-Haderech** project.

## Table of Contents

- [Code Structure](#code-structure)
- [Key Components](#key-components)
- [Third-Party Services](#third-party-services)

## Code Structure

The project follows a typical React application structure with a focus on modularity and reusability. Below is an overview of the key directories and files:

m-haderech/
├── functions/
│ └── ... (cloud functions for Firebase)
├── node_modules/
│ └── ... (project dependencies)
├── public/
│ ├── index.html
│ └── ... (other static assets)
├── src/
│ ├── assets/
│ │ └── ... (images, icons, etc.)
│ ├── components/
│ │ ├── About/
│ │ │ ├── AboutFull.jsx
│ │ │ └── AboutFull.css
│ │ ├── AnalyticsSection/
│ │ │ ├── AnalyticsSection.jsx
│ │ │ └── AnalyticsSection.css
│ │ ├── BankInfo/
│ │ │ ├── BankInfo.jsx
│ │ │ └── BankInfo.css
│ │ ├── Contact/
│ │ │ ├── Contact.jsx
│ │ │ └── Contact.css
│ │ ├── DonationSection/
│ │ │ ├── DonationSection.jsx
│ │ │ └── DonationSection.css
│ │ ├── Navbar/
│ │ │ ├── Navbar.jsx
│ │ │ └── Navbar.css
│ │ ├── NewsletterLink/
│ │ │ ├── NewsletterLink.jsx
│ │ │ └── NewsletterLink.css
│ │ ├── Posts/
│ │ │ ├── Post.jsx
│ │ │ └── Post.css
│ │ ├── PostsSection/
│ │ │ ├── PostsSection.jsx
│ │ │ └── PostsSection.css
│ │ ├── Sidebar/
│ │ │ ├── Sidebar.jsx
│ │ │ └── Sidebar.css
│ │ └── ... (other components)
│ ├── firebase/
│ │ └── config.js
│ ├── hooks/
│ │ └── ... (custom hooks for various functionalities)
│ ├── pages/
│ │ ├── AdminDashboard/
│ │ │ ├── AdminDashboard.jsx
│ │ │ └── AdminDashboard.css
│ │ ├── ConventionsList/
│ │ │ ├── ConventionsList.jsx
│ │ │ └── ConventionsList.css
│ │ ├── Home/
│ │ │ ├── Home.jsx
│ │ │ └── Home.css
│ │ ├── Miscellaneous/
│ │ │ ├── Miscellaneous.jsx
│ │ │ └── Miscellaneous.css
│ │ └── ... (other pages)
│ ├── App.js
│ ├── index.js
│ └── ... (other configuration files)
├── .env
├── .gitignore
├── package.json
└── README.md


## Key Components

### Navbar
- **File**: `src/components/Navbar/Navbar.jsx`
- **Description**: Provides navigation links to different sections of the website.

### PostsSection
- **File**: `src/components/PostsSection/PostsSection.jsx`
- **Description**: Displays a list of posts with pagination and search functionality.

### ConventionsList
- **File**: `src/pages/ConventionsList/ConventionsList.jsx`
- **Description**: Lists conventions filtered from the posts.

### AdminDashboard
- **File**: `src/pages/AdminDashboard/AdminDashboard.jsx`
- **Description**: Admin dashboard for managing posts, users, questionnaires, and miscellaneous information.

### AnalyticsSection
- **File**: `src/components/AnalyticsSection/AnalyticsSection.jsx`
- **Description**: Displays statistics about the organization with animated count-up numbers.

### DonationSection
- **File**: `src/components/DonationSection/DonationSection.jsx`
- **Description**: Encourages users to donate with a link to the donation page.

### NewsletterLink
- **File**: `src/components/NewsletterLink/NewsletterLink.jsx`
- **Description**: Provides a link for users to subscribe to the newsletter.

### BankInfo
- **File**: `src/components/BankInfo/BankInfo.jsx`
- **Description**: Displays and manages bank information details.

### Contact
- **File**: `src/components/Contact/Contact.jsx`
- **Description**: Displays and manages contact information.

### Sidebar
- **File**: `src/components/Sidebar/Sidebar.jsx`
- **Description**: Provides easy navigation between different admin sections in the admin dashboard.

## Third-Party Services

### Firebase
- **Services Used**: Firestore, Authentication, Storage
- **Purpose**: Provides backend services including database, authentication, and file storage.
- **Configuration**: Firebase configuration details are stored in the `.env` file.

### Dnd-kit
- **Purpose**: Used for implementing drag-and-drop functionality within the application.
- **Usage**: Primarily used in components like `Questionnaire Management` for reordering items.

### Chart.js
- **Purpose**: Used for data visualization.
- **Usage**: Implemented in components like `AnalyticsSection` to display various statistics.

### emailjs
- **Purpose**: Allows sending emails directly from the client side.
- **Usage**: Used in various components for sending notification emails.

### React-icons
- **Purpose**: Provides a wide range of icons for enhancing the UI.
- **Usage**: Used across multiple components for consistent and visually appealing icons.

## Code Structure

The project follows a typical React application structure with a focus on modularity and reusability. Below is an overview of the key directories and files:


## Third-Party Services

The **M-Haderech** project utilizes several third-party services to enhance functionality and provide a better user experience. Below is a list of the key third-party services used in the project:

### Firebase

1. **Firebase Firestore**: 
   - Used as the primary database for storing and retrieving data such as user information, posts, questionnaires, and other miscellaneous data.
   - Provides real-time data synchronization and offline capabilities.

2. **Firebase Authentication**: 
   - Used for user authentication and authorization.
   - Supports multiple authentication methods including email/password and social media logins.

3. **Firebase Storage**: 
   - Used for storing and serving user-generated content such as images, videos, and documents.

### emailjs

- **emailjs**: 
  - Used for sending emails directly from the client-side application.
  - Helps in sending notifications, password reset emails, and other communications.

### React Libraries

1. **react-router-dom**:
   - Used for handling routing and navigation within the application.
   - Provides a declarative way to manage navigation.

2. **react-icons**:
   - Provides a collection of popular icons for use within the application.
   - Includes icons from Font Awesome, Material Design, and other icon libraries.

3. **react-countup**:
   - Used for creating animated count-up numbers, particularly in the analytics section.
   - Enhances the visual appeal of statistics and metrics.

4. **@dnd-kit/core**:
   - Provides drag-and-drop functionality for managing elements within the application.
   - Used in components such as the questionnaire management system to reorder questions.

### Chart.js

- **chart.js**:
  - Used for data visualization.
  - Provides various types of charts to represent data in a graphical format.

### Modal

- **react-modal**:
  - Used for creating modals and dialog boxes.
  - Provides a flexible way to manage modals for user interactions such as updates, deletions, and confirmations.

## Conclusion

The **M-Haderech** project leverages a combination of powerful third-party services and libraries to provide a robust and user-friendly application. Firebase services ensure efficient data management and user authentication, while various React libraries enhance the functionality and user experience. The integration of these third-party services allows for a scalable and maintainable codebase, ensuring the project's long-term success and adaptability.

